#! /usr/bin/env bash

thisDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

while getopts ":f" opt; do
    case "$opt" in
        f)
            force=true
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
    esac
done

git -C "$thisDir" submodule init
git -C "$thisDir" submodule update

declare -A files

files[~/.bashrc]=bash/.bashrc
files[~/.bash_styles]=bash/.bash_styles
files[~/.bash_prompt]=bash/.bash_prompt
files[~/.bash_aliases]=bash/.bash_aliases
files[~/.bash_welcome]=bash/.bash_welcome
files[~/.bash_osx]=bash/.bash_osx
files[~/.bash_ubuntu]=bash/.bash_ubuntu
files[~/.dircolors]=bash/.dircolors
files[~/.gitconfig]=git/.gitconfig
files[~/.gitprompt]=git/.gitprompt
files[~/.vim]=vim/.vim
files[~/.vimrc]=vim/.vimrc

for f in ${!files[@]}; do
    # if it doesn't exist, is a symlink, or installing with force.
    if [[ ! -f "$f" ]] || [[ -L "$f" ]] || [[ "$force" = true ]]; then
        rm -rf "$f"
        ln -sf "$thisDir/${files[$f]}" "$f"
    else
        echo "$f is not a symbolic link, use -f or remove the file."
    fi
done